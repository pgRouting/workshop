name: Update Locale and Website

on:
  workflow_dispatch:
  push:
    branches:
      - develop

jobs:
  update-documentation:
    name: Update Locale and Website
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get postgres version
        run: |
          sudo service postgresql start
          pgver=$(psql --version | grep -Po '(?<=psql \(PostgreSQL\) )[^;]+(?=\.\d \()')
          echo "PGVER=${pgver}" >> $GITHUB_ENV
          echo "PGIS=3" >> $GITHUB_ENV

      - name: Extract commit hash
        run: |
          git_hash=$(git rev-parse --short "$GITHUB_SHA")
          echo "GIT_HASH=$git_hash" >> $GITHUB_ENV

      - name: Add PostgreSQL APT repository
        run: |
          sudo apt-get install curl ca-certificates gnupg
          curl https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
          sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ \
            $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'

      - name: Install python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y osm2pgrouting \
            postgresql-${PGVER}-postgis-${PGIS} \
            postgresql-${PGVER}-postgis-${PGIS}-scripts \
            postgresql-${PGVER}-pgrouting

          python -m pip install --upgrade pip
          pip install -r REQUIREMENTS.txt
          pip list

      - name: Configure
        run: |
          service postgresql status
          sudo service postgresql start
          service postgresql status
          sudo -u postgres createdb -p ${POSTGRES_PORT}  setup
          sudo -u postgres psql -c 'CREATE ROLE "runner" SUPERUSER CREATEDB CREATEROLE INHERIT LOGIN PASSWORD $$runner$$;' -d setup
          echo :5432:*:runner:runner >> .pgpass
          sudo -u postgres psql -c 'CREATE ROLE "user" SUPERUSER CREATEDB CREATEROLE INHERIT LOGIN PASSWORD $$user$$;' -d setup
          echo :5432:*:user:user >> .pgpass
          mkdir build
          cd build
          cmake -DLOCALE=ON -DPGR_WORKSHOP=ON -DES=ON ..
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: setup

      - name: Build
        run: |
          cd build
          make -j 4

      - name: Initialize mandatory git config
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Update locale
        run: |
          # List all the files that needs to be committed in build/docs/locale_changes.txt
          awk '/^Update|^Create/{print $2}' build/docs/locale_changes.txt > tmp && mv tmp build/docs/locale_changes.txt        # .po files
          cat build/docs/locale_changes.txt | perl -pe 's/(.*)en\/LC_MESSAGES(.*)/$1pot$2t/' >> build/docs/locale_changes.txt  # .pot files
          cat build/docs/locale_changes.txt

          # Remove obsolete entries #~ from .po files
          tools/transifex/remove_obsolete_entries.sh

          # Add the files, commit and push
          for line in `cat build/docs/locale_changes.txt`; do git add "$line"; done
          git diff --staged --quiet || git commit -m "Update locale: commit ${{ env.GIT_HASH }}"
          git fetch origin
          git reset --hard  # Remove the unstaged changes before rebasing
          git rebase origin/develop
          git push origin develop

      - name: Update Website
        run: |
          git checkout -f origin/gh-pages
          git checkout -b gh-pages
          rm -rf dev
          cp -r build/docs/_build/html dev
          git add dev
          git diff --staged --quiet || git commit -m "Update documentation for develop: commit ${{ env.GIT_HASH }}"
          git fetch origin
          git rebase origin/gh-pages
          git push origin gh-pages

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
