# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010-2022 Daniel Kastl, Vicky Vergara, Rajat Shinde
# This file is distributed under the same license as the Workshop FOSS4G
# Firenze package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Workshop FOSS4G Firenze 2.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-14 13:45-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../build/docs/un_sdg/sdg11-cities.rst:11
msgid "Sustainable Cities and Communities"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:13
msgid ""
"`Sustainable Cities and Communities` is the 11th Sustainable Development "
"Goal which aspires to make cities `inclusive, safe, resilient` and "
"`sustainable`.The world is becoming increasingly urbanized. Since 2007, "
"more than half the worldâ€™s population has been living in cities. This "
"makes it very important for the cities to remain alert when there is a "
"chance of disaster like floods. Local administration should know if their"
" city is going to get affected by the rains which happen in their "
"proximity so that they can raise an alert amongst the citizens. This "
"exercise will solve one of such problems."
msgstr ""

msgid "Sustainable Development Goal 11: Sustainable Cities and Communities"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:26
msgid "`Image Source <https://sdgs.un.org/goals/goal11>`__"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:28
msgid "Chapter Contents"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:31
msgid "Problem: City getting affected by rain or not"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:33
msgid "**Problem Statement**"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:35
msgid "To determine the areas where if it rains will affect a city/town"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:41
msgid "**Core Idea**"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:43
msgid ""
"If it rains in vicinity of a river connecting the city, the city will get"
" affected by the rains."
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:46
msgid "**Approach**"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:48
#: ../../build/docs/un_sdg/sdg11-cities.rst:59
msgid "Choose a city"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:49
msgid "Get the Rivers (Edges)"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:50
msgid "Create river components"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:51
msgid "Create a Buffer around the city"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:52
msgid "Finding the components intersecting the buffer"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:53
msgid "Finding the rain zones"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:60
msgid ""
"For this exercise, Munshigang city from Bangladesh is chosen. This city "
"has multiple rivers in its proximity which makes it an apt location to "
"demonstrate this exercise. The exercise will try to find the areas, where"
" if it rains the city will be affected. To define the location of this "
"city and use it in for further steps, create a table to store the name "
"along with latitude and longitude values of City's location. This stores "
"the city as a point."
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:68
msgid "Exercise 1: Create a point for the city"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:78
msgid ":ref:`un_sdg/appendix:**Exercise:** 1 (**Chapter:** SDG 11)`"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:80
msgid ""
"Latitude and longitude values are converted into ``geometry`` form using "
"``ST_Point`` which returns a point with the given X and Y coordinate "
"values. ``ST_SetSRID`` is used to set the SRID (Spatial Reference "
"Identifier) on the point geometry to ``4326``."
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:86
msgid "Pre-processing waterways data"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:87
msgid ""
"First step is to pre-process the data obtained from :doc:`data`. This "
"section will work the graph that is going to be used for processing. "
"While building the graph, the data has to be inspected to determine if "
"there is any invalid data. This is a very important step to make sure "
"that the data is of required quality. pgRouting can also be used to do "
"some Data Adjustments. This will be discussed in further sections."
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:95
msgid "Setting the Search Path of Waterways"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:96
msgid ""
"First step in pre processing is to set the search path for ``Waterways`` "
"data. Search path is a list of schemas that helps the system determine "
"how a particular table is to be imported."
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:101
msgid "Exercise 2: Inspecting the schemas"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:102
msgid ""
"Inspect the schemas by displaying all the present schemas using the "
"following command"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:119
msgid ""
"The schema names are ``waterway``  and ``public``. The owner depends on "
"who has the rights to the database."
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:122
msgid "Exercise 3: Inspecting the search path"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:123
msgid "Display the current search path using the following query."
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:136
msgid "This is the current search path. Tables cannot be accessed using this."
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:139
msgid "Exercise 4: Fixing the search path"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:140
msgid ""
"In this case, search path of roads table is set to ``waterways`` schema. "
"Following query is used to fix the search path"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:156
msgid "Exercise 5: Enumerating tables"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:157
msgid ""
"Finally, ``\\dt`` is used to verify if the Schema have bees changed "
"correctly."
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:177
msgid "Exercise 6: Counting the number of Waterways"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:178
msgid ""
"The importance of counting the information on this workshop is to make "
"sure that the same data is used and consequently the results are same. "
"Also, some of the rows can be seen to understand the structure of the "
"table and how the data is stored in it."
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:192
msgid ":ref:`un_sdg/appendix:**Exercise:** 6 (**Chapter:** SDG 11)`"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:195
msgid "Exercise 7: Removing the Rivers which are in swamps"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:196
msgid ""
"This exercise focusses only the areas in the mainland, where if it rains "
"the city is affected. Hence, the rivers which are there in the swamp area"
" have to be removed from the ``waterways_ways`` table."
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:209
msgid ":ref:`un_sdg/appendix:**Exercise:** 7 (**Chapter:** SDG 11)`"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:212
msgid "pgr_connectedComponents for preprocessing waterways"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:214
msgid ""
"For the next step ``pgr_connectedComponents`` will be used. It is used to"
" find the connected components of an undirected graph using a Depth First"
" Search-based approach."
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:218
msgid "Signatures"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:229
msgid ""
"`pgr_connectedComponents Documentation "
"<https://docs.pgrouting.org/3.1/en/pgr_connectedComponents.html>`__ can "
"be found at this link for more information."
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:233
msgid "Exercise 8: Get the Connected Components of Waterways"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:235
msgid ""
"As the rivers in the data are not having single edge, i.e, multiple edges"
" make up a river, it is important to find out the connected edges and "
"store the information in the ``waterways_ways`` table. This will help us "
"to identify which edges belong to a river. First, the connected "
"components are found and then stored in a new column named ``component``."
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:241
msgid ""
"pgRouting function ``pgr_connectedComponents`` is used to complete this "
"task. A sub-query is created to find out all the connected components. "
"After that, the ``component`` column is updated using the results "
"obtained from the sub-query. This helps in storing the component id in "
"the ``waterways_ways_vertices_pgr`` table. Next query uses this output "
"and stores the component id in the waterways_ways (edges) table. Follow "
"the steps given below to complete this task."
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:248
msgid "Add a column named ``component`` to store component number."
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:256
msgid "Get the Connected Components of Waterways"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:264
msgid ""
"With component id stored in both vertex and edge table of waterways, lets"
" proceed to next step."
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:269
msgid ":ref:`un_sdg/appendix:**Exercise:** 8 (**Chapter:** SDG 11)`"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:272
msgid "Exercise 9: Creating buffer around the city"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:273
msgid ""
"Create a buffer around the city to define an area, inside which the "
"intersection of rivers would be found. ``ST_Buffer`` is used to create "
"this buffer. Follow the steps given below to complete this task."
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:277
#: ../../build/docs/un_sdg/sdg11-cities.rst:345
msgid "Adding column to store Buffer geometry"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:285
#: ../../build/docs/un_sdg/sdg11-cities.rst:353
msgid "Storing Buffer geometry"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:293
msgid "Displaying the results of Buffer operation"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:303
msgid ":ref:`un_sdg/appendix:**Exercise:** 9 (**Chapter:** SDG 11)`"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:306
msgid "Exercise 10: Creating a function that gets the city buffer"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:307
msgid ""
"A function can be created for the same task. This will be help when the "
"table has more than one city."
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:317
msgid "Exercise 11: Finding the components intersecting the buffer"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:318
msgid ""
"Next step is to find the components of waterways which lie in the buffer "
"zone of the city. These are the waterways which will affect the city when"
" it rains around them. This is done using ``ST_Intersects``. Note that "
"``get_city_buffer`` function is used in the query below."
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:329
msgid ""
"Output shows the distinct component numbers which lie in the buffer zone "
"of the city. Next step is to get all the edges that have those "
"components."
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:334
msgid ":ref:`un_sdg/appendix:**Exercise:** 11 (**Chapter:** SDG 11)`"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:337
msgid "Exercise 12: Get the rain zones"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:338
msgid ""
"This is the final step of the exercise. In this, the area where if it "
"rains, the city would be affected, also can be called as ``rain zone`` is"
" being found. For this, create a Buffer around the river components. "
"First, add columns named ``rain_zone`` in waterways_ways to store buffer "
"geometry of the rain zones. Then, find the buffer for every edge which "
"intersects the buffer area using ``ST_Buffer`` and update the "
"``rain_zone`` column. Follow the steps given below to complete this task."
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:361
msgid ""
"This will give us the requires area, where if it rains, the city will be "
"affected."
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:365
msgid ":ref:`un_sdg/appendix:**Exercise:** 12 (**Chapter:** SDG 11)`"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:368
msgid "Exercise 13: Create a union of rain zones"
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:369
msgid ""
"Multiple polygons that are obtained can also be merged using "
"``ST_Union``. This will give a single polygon as the output."
msgstr ""

#: ../../build/docs/un_sdg/sdg11-cities.rst:380
msgid ":ref:`un_sdg/appendix:**Exercise:** 13 (**Chapter:** SDG 11)`"
msgstr ""

