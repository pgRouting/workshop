# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010-2022 Daniel Kastl, Vicky Vergara, Rajat Shinde
# This file is distributed under the same license as the Workshop FOSS4G Firenze package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Workshop FOSS4G Firenze 2.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-14 13:45-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../build/docs/un_sdg/sdg3-health.rst:11
msgid "Good Health and Well Being"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:13
msgid "`Good Health and Well Being` is the 3rd Sustainable Development Goal which aspires to ensure health and well-being for all, including a bold commitment to end the epidemics like AIDS, tuberculosis, malaria and other communicable diseases by 2030. It also aims to achieve universal health coverage, and provide access to safe and effective medicines and vaccines for all. Supporting research and development for vaccines is an essential part of this process as well as expanding access to affordable medicines. Hospitals are a very important part of a well functioning health infrastructure. An appropriate planning is required for optimal distribution of the population of an area to its hospitals. Hence, it is very important to estimate the number of dependant people living near the hospital for better planning which would ultimately help in achieving universal coverage of health services. This chapter will focus on solving one such problem."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:None
msgid "Sustainable Development Goal 3: Good Health and Well Being"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:30
msgid "`Image Source <https://sdgs.un.org/goals/goal3>`__"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:32
msgid "Chapter Contents"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:35
msgid "Problem: Estimation of Population Served by Hospitals"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:37
msgid "**Problem Statement**"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:39
msgid "To determine the population served by a hospital based on travel time"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:41
msgid "**Core Idea**"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:43
msgid "Population residing along the roads which reach to a hospital within a particular time is dependant on that hospital."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:46
msgid "**Approach**"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:48
msgid "To prepare a dataset with:"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:50
msgid "Edges: Roads"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:51
msgid "Polygons: Buildings with population"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:53
msgid "Find the travel-time based the roads served"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:54
msgid "Estimate the population of the buildings"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:55
msgid "Find the nearest road to the buildings"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:56
msgid "Store the sum of population of nearest buildings in roads table"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:57
msgid "Find the sum of population on all the roads in the roads served"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:60
msgid "Pre-processing roads and buildings data"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:61
msgid "First step is to pre-process the data obtained from :ref:`un_sdg/data:Data for Sustainable Development Goals`. This section will work the graph that is going to be used for processing. While building the graph, the data has to be inspected to determine if there is any invalid data. This is a very important step to make sure that the data is of required quality. pgRouting can also be used to do some Data Adjustments. This will be discussed in further sections."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:69
msgid "Inspecting the database structure"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:70
msgid "First step in pre processing is to set the search path for ``Roads`` and ``Buildings`` data. `Search path` is a list of schemas helps the system determine how a particular table is to be imported. In this case, search path of roads table is set to roads and buildings schema. ``\\dn`` is used to list down all the present schemas. ``SHOW search_path`` command shows the current search path. ``SET search_path`` is used to set the search path to ``roads`` and ``buildings``. Finally, ``\\dt`` is used to verify if the Schema have bees changed correctly. Following code snippets show the steps as well as the outputs."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:80
msgid "Exercise 1: Inspecting schemas"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:82
msgid "Inspect the schemas by displaying all the present schemas using the following command"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:89
#: ../../build/docs/un_sdg/sdg3-health.rst:113
msgid "The output of the postgresql command is:"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:101
msgid "The schema names are ``buildings`` , ``roads``  and ``public``. The owner depends on who has the rights to the database."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:105
msgid "Exercise 2: Inspecting the search path"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:107
msgid "Display the current search path using the following query."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:122
msgid "This is the current search path. Tables cannot be accessed using this."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:125
msgid "Exercise 3: Fixing the search path"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:127
msgid "In this case, search path of roads table is search path to ``roads`` and ``buildings`` schemas. Following query is used to fix the search path"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:143
msgid "Exercise 4: Enumerating tables"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:144
msgid "Finally, ``\\dt`` is used to verify if the Schema have bees changed correctly."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:166
msgid "Exercise 5: Counting the number of Roads and Buildings"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:168
msgid "The importance of counting the information on this workshop is to make sure that the same data is used and consequently the results are same. Also, some of the rows can be seen to  understand the structure of the table and how the data is stored in it."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:181
msgid ":ref:`un_sdg/appendix:**Exercise:** 5 (**Chapter:** SDG 3)`"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:183
msgid "Following image shows the roads and buildings visualised."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:190
msgid "Preprocessing Buildings"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:191
msgid "The table ``buildings_ways`` contains the buildings in edge form. They have to be converted into polygons to get the area."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:196
msgid "Exercise 6: Add a spatial column to the table"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:198
msgid "Add a spatial column named ``poly_geom`` to the table ``buildings_ways`` to store the Polygon Geometry"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:209
msgid ":ref:`un_sdg/appendix:**Exercise:** 6 (**Chapter:** SDG 3)`"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:212
msgid "Exercise 7: Removing the polygons with less than 4 points"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:214
msgid "``ST_NumPoints`` is used to find the number of points on a geometry. Also, polygons with less than 3 points/vertices are not considered valid polygons in PostgreSQL. Hence, the buildings having less than 3 vertices need to be cleaned up. Follow the steps given below to complete this task."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:227
msgid ":ref:`un_sdg/appendix:**Exercise:** 7 (**Chapter:** SDG 3)`"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:230
msgid "Exercise 8: Creating the polygons"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:232
msgid "``ST_MakePolygons`` is used to make the polygons. This step stores the geom of polygons in the ``poly_geom`` column which was created earlier."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:243
msgid ":ref:`un_sdg/appendix:**Exercise:** 8 (**Chapter:** SDG 3)`"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:246
msgid "Exercise 9: Calculating the area"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:247
msgid "After getting the polygon geometry, next step is to find the area of the polygons. Follow the steps given below to complete this task."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:250
msgid "Adding a column for storing the area"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:258
msgid "Storing the area in the new column"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:260
msgid "``ST_Area`` is used to calculate area of polygons. Area is stored in the new column"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:271
msgid ":ref:`un_sdg/appendix:**Exercise:** 9 (**Chapter:** SDG 3)`"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:274
msgid "pgr_connectedComponents"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:275
msgid "For the next step ``pgr_connectedComponents`` will be used. It is used to find the connected components of an undirected graph using a Depth First Search-based approach."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:278
msgid "**Signatures**"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:290
msgid "`pgr_connectedComponents Documentation <https://docs.pgrouting.org/3.1/en/pgr_connectedComponents.html>`__ can be found at this link for more information."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:294
msgid "Preprocessing Roads"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:295
msgid "pgRouting algorithms are only useful when the road network belongs to a single graph (or all the roads are connected to each other). Hence, the disconnected roads have to be removed from their network to get appropriate results. This image gives an example of the disconnected edges."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:304
msgid "For example, in the above figure roads with label ``119`` are disconnected from the network. Hence they will have same connected component number. But the count of this number will be less count of fully connected network. All the edges with the component number with count less than maximum count will be removed"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:309
#: ../../build/docs/un_sdg/sdg3-health.rst:654
msgid "Follow the steps given below to complete this task."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:312
msgid "Exercise 10: Find the Component ID for Road vertices"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:313
msgid "First step in Preprocessing Roads is to find the connected component ID for Road vertices. Follow the steps given below to complete this task."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:316
msgid "Add a column named ``component`` to store component number."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:324
msgid "Update the ``component`` column in ``roads_ways_vertices_pgr`` with the component number"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:332
msgid "This will store the component number of each edge in the table. Now, the completely connected network of roads should have the maximum count in the ``component`` table."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:342
msgid ":ref:`un_sdg/appendix:**Exercise:** 10 (**Chapter:** SDG 3)`"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:345
msgid "Exercise 11: Finding the components which are to be removed"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:347
msgid "This query selects all the components which are not equal to the component number with maximum count using a subquery which groups the rows in ``roads_ways_vertices_pgr`` by the component."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:359
msgid ":ref:`un_sdg/appendix:**Exercise:** 11 (**Chapter:** SDG 3)`"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:362
msgid "Exercise 12: Finding the road vertices of these components"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:364
msgid "Find the road vertices of these components which belong to those components which are to be removed. The following query selects all the road vertices which have the component number from Exercise 11."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:376
msgid ":ref:`un_sdg/appendix:**Exercise:** 12 (**Chapter:** SDG 3)`"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:379
msgid "Exercise 13: Removing the unwanted edges and vertices"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:381
msgid "Removing the unwanted edges"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:383
msgid "In ``roads_ways`` table (edge table) ``source`` and ``target`` have the ``id`` of the vertices from where the edge starts and ends. To delete all the disconnected edges the following query takes the output from the query of Step 4 and deletes all the edges having the same ``source`` as the ``id``."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:394
msgid "Removing unused vertices"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:396
msgid "The following query uses the output of Step 4 to remove the vertices of the disconnected edges."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:408
msgid ":ref:`un_sdg/appendix:**Exercise:** 13 (**Chapter:** SDG 3)`"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:411
msgid "Finding the roads served by the hospitals"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:412
msgid "After pre-processing the data, next step is to find the area served by the hospital. This area can be computed from the entrance of the hospital or from any point on road near the hospital. In this exercise it is computed from closest road vertex. ``pgr_drivingDistance`` will be used to find the roads served. The steps to be followed are:"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:418
msgid "Finding the closest road vertex"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:419
msgid "Finding the roads served"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:420
msgid "Generalising the roads served"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:423
msgid "Exercise 14: Finding the closest road vertex"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:424
msgid "There are multiple road vertices near the hospital. Create a function to find the geographically closest road vertex. ``closest_vertex`` function takes geometry of other table as input and gives the gid of the closest vertex as output by comparing ``geom`` of both the tables."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:433
msgid "The following query creates a function to find the closest road vertex."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:442
msgid "pgr_drivingDistance"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:443
msgid "For the next step ``pgr_drivingDistance`` will be used. This returns the driving distance from a start node. It uses the Dijkstra algorithm to extract all the nodes that have costs less than or equal to the value distance. The edges that are extracted conform to the corresponding spanning tree."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:449
msgid "Signatures"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:457
msgid "Using defaults"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:464
msgid "Single Vertex"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:471
msgid "Multiple Vertices"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:477
msgid "`pgr_drivingDistance Documentation <https://docs.pgrouting.org/3.1/en/pgr_drivingDistance>`__ can be found at this link for more information."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:481
msgid "Exercise 15: Finding the served roads using pgr_drivingDistance"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:482
msgid "In this exercise, the roads served based on travel-time are calculated. This can be calculated using ``pgrdrivingDistance`` function of pgRouting. Time in minutes is considered as ``cost``. The ``agg_cost`` column would show the total time required to reach the hospital."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:487
msgid "For the following query,"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:489
msgid "In line 3, Pedestrian speed is assumed to be as ``1 m/s``. As ``time`` = ``distance/speed``, ``length_m`` / ``1 m/s`` / ``60`` gives the time in minutes"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:491
msgid "In line 7, ``tag_id = '318'``  as 318 is the tag_id of hospital in the configuration file of buildings. Reference for Tag ID : :ref:`un_sdg/data:Appendix`"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:493
msgid "In line 8, ``10`` is written for 10 minutes which is a threshold for ``agg_cost``"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:494
msgid "In line 8, ``FALSE`` is written as the query is for undirected graph"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:502
#: ../../build/docs/un_sdg/sdg3-health.rst:534
msgid "``LIMIT 10`` displays the first 10 rows of the output."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:506
msgid ":ref:`un_sdg/appendix:**Exercise:** 15 (**Chapter:** SDG 3)`"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:508
msgid "Following figure shows the visualised output of the above query. The lines highlighted by ``red`` colour show the area from where the hospital can be reached within 10 minutes of walking at the speed of ``1 m/s``. It is evident from the output figure that some of the roads which are near to the hospital are not highlighted. For example, to roads in the north of the hospital. This is because the only one edge per road vertex was selected by the query. Next section will solve this issue by doing a small modification in the query."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:521
msgid "Exercise 16: Generalising the served roads"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:522
msgid "The edges which are near to to hospital should also be selected in the roads served as the hospital also serves those buildings. The following query takes the query from previous section as a ``subquery`` and selects all the edges from ``roads_ways`` that have the same ``source`` and ``target`` to that of ``subquery`` (Line 14)."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:538
msgid ":ref:`un_sdg/appendix:**Exercise:** 16 (**Chapter:** SDG 3)`"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:540
msgid "Following figure shows the visualised output of the above query. Lines highlighted in ``yellow`` show the `generalised the roads served`. This gives a better estimate of the areas from where the hospital can be reached by a particular speed."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:549
msgid "Calculating the total population served by the hospital"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:550
msgid "Now the next step is to estimate the dependant population. Official source of population is Census conducted by the government. But for this exercise, population will be estimated from the ``area`` as well as the ``category`` of the building. This area will be stored in the nearest roads. Following steps explain this process in detail."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:557
msgid "Exercise 17: Estimating the population of buildings"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:558
msgid "Population of an building can be estimated by its area and its category. Buildings of OpenStreetMap data are classified into various categories. For this exercise, the buildings are classified into the following classes:"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:562
msgid "Negligible: People do not live in these places. But the default is 1 because of homeless people."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:564
msgid "Very Sparse: People do not live in these places. But the default is 2 because there may be people guarding the place."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:566
msgid "Sparse: Buildings with low population density. Also, considering the universities and college because the students live there."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:568
msgid "Moderate: A family unit housing kind of location."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:569
msgid "Dense: A medium sized residential building."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:570
msgid "Very Dense: A large sized residential building."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:572
msgid "Reference: :ref:`un_sdg/data:Appendix`"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:574
msgid "This class-specific factor is multiplied with the area of each building to get the population. Follow the steps given below to complete this task."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:577
msgid "Create a function to find population using class-specific factor and area."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:584
msgid "All these are estimations based on this particular area. More complicated functions can be done that consider height of the apartments but the design of a function is going to depend on the availability of the data. For example, using census data can achieve more accurate estimation."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:589
msgid "Add a column for storing the population in the ``buildings_ways``"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:597
msgid "3. Use the ``population`` function to store the population in the new column created in the ``building_ways``."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:608
msgid ":ref:`un_sdg/appendix:**Exercise:** 17 (**Chapter:** SDG 3)`"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:612
msgid "Exercise 18: Finding the nearest roads to store the population"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:613
msgid "To store the population of buildings in the roads, nearest road to a building is to be found. Follow the steps given below to complete this task."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:616
msgid "Create Function for finding the closest edge."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:623
msgid "Add a column in ``buildings_ways`` for storing the id of closest edge"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:631
msgid "Store the edge id of the closest edge in the new column of ``buildings_ways``"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:641
msgid ":ref:`un_sdg/appendix:**Exercise:** 18 (**Chapter:** SDG 3)`"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:644
msgid "Exercise 19: Storing the population in the roads"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:645
msgid "After finding the nearest road, the sum of population of all the nearest buildings is stored in the population column of the roads table. Following image shows the visualised output where the blue colour labels shows the population stored in roads."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:656
msgid "Add a column in ``roads_ways`` for storing population"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:664
msgid "Update the roads with the sum of population of buildings closest to it"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:672
msgid "Verify is the population is stored using the following query."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:683
msgid ":ref:`un_sdg/appendix:**Exercise:** 19 (**Chapter:** SDG 3)`"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:686
msgid "Exercise 20: Finding total population"
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:687
msgid "Final step is to find the total population served by the hospital based on travel-time. Use the query from `Exercise 16: Generalising the served roads`_ as a subquery to get all the edges in the roads served. Note that ``s.population`` is added in line 14 which gives the population. After getting the population for each edge/road, use ``sum()`` to get the total population which is dependant on the hospital."
msgstr ""

#: ../../build/docs/un_sdg/sdg3-health.rst:701
msgid ":ref:`un_sdg/appendix:**Exercise:** 20 (**Chapter:** SDG 3)`"
msgstr ""
